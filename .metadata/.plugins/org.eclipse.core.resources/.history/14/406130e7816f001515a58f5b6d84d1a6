package MemoryUtil;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.text.DecimalFormat;

import android.app.Activity;
import android.app.ActivityManager;
import android.content.Context;
import android.os.Environment;
import android.os.StatFs;
import android.text.format.Formatter;
import android.util.Log;

public class Memory {
	
	
	
	
	
  public static void getTotalMem(Context context)
  {
	String state=Environment.getExternalStorageState();
	int SDcard=0;
	if(Environment.MEDIA_MOUNTED.equals(state))
	{
		File sdf=Environment.getExternalStorageDirectory();
		StatFs sfs_sd=new StatFs(sdf.getPath());
		SDcard=sfs_sd.getBlockCount()*sfs_sd.getBlockSize();
	}
    File f=Environment.getRootDirectory();
    StatFs sf=new StatFs(f.getPath());
    String result;
    result=Formatter.formatFileSize(context, sf.getBlockCount()*sf.getBlockSize()+SDcard);
       Log.d("on memory", result);
  }
  public static String getAvailableiMem(Context context)
  {
		String state=Environment.getExternalStorageState();
		int SDcard=0;
		if(Environment.MEDIA_MOUNTED.equals(state))
		{
			File sdf=Environment.getExternalStorageDirectory();
			StatFs sfs_sd=new StatFs(sdf.getPath());
			SDcard=sfs_sd.getAvailableBlocks()*sfs_sd.getBlockSize();
		}
		  File f=Environment.getRootDirectory();
		    StatFs sf=new StatFs(f.getPath());
		    String result;
		   result=Formatter.formatFileSize(context, sf.getAvailableBlocks()*sf.getBlockSize()+SDcard);
		   return result;
  }
  public static int getPercentMem(Context context)
  {

		String state=Environment.getExternalStorageState();
		double SDcard_total=0;
		double SDcard_availa=0;
		double root_total=0;
		double root_availa=0;
		if(Environment.MEDIA_MOUNTED.equals(state))
		{
			File sdf=Environment.getExternalStorageDirectory();
			StatFs sfs_sd=new StatFs(sdf.getPath());
			SDcard_availa=sfs_sd.getAvailableBlocks()*sfs_sd.getBlockSize();
			SDcard_total=sfs_sd.getBlockCount()*sfs_sd.getBlockSize();
		}
		  File f=Environment.getRootDirectory();
		    StatFs sf=new StatFs(f.getPath());
		    root_total=sf.getBlockCount()*sf.getBlockSize();
		    root_availa=sf.getAvailableBlocks()*sf.getBlockSize();
	
		    int result=(int)Math.rint(((root_availa+SDcard_availa)/(root_total+SDcard_total))*100);
		 return result;
  }
  public static void getMem(Context context)
  {
	  ActivityManager att_man=(ActivityManager) context.getSystemService(context.ACTIVITY_SERVICE);
	  ActivityManager.MemoryInfo att_mom=new ActivityManager.MemoryInfo();
	  att_man.getMemoryInfo(att_mom);
	
	
  }
  public static int getMemPercent(Context context)
  {
	  String mem_path="/proc/meminfo";
	  String result="";
	  String line;
	  int percent=-1;
	  try {
		BufferedReader br=new BufferedReader(new FileReader(mem_path),8);
		while((line=br.readLine())!=null)
		{
			result+=line;
		}
		Log.d("mem", " "+result);
		int start=result.indexOf(":");
		int end=result.indexOf("k");
		Log.d("mem", result.substring(start+1, end).trim());
		result=result.substring(start+1, end).trim();
		 ActivityManager att_man=(ActivityManager) context.getSystemService(context.ACTIVITY_SERVICE);
		 ActivityManager.MemoryInfo att_mom=new ActivityManager.MemoryInfo();
		 att_man.getMemoryInfo(att_mom);
		 long a=att_mom.availMem/1024;
		 double b=Double.parseDouble(result);
		percent=(int)Math.rint((1-(a/b))*100);
		return percent;
	} catch (Exception e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	  return percent;
	  
  }
	
}
